#!/usr/bin/perl -w

use strict;

my $sVersionRegex = qr/(\d+\.\d+(?:\.\d+)*(?:\w*))/;

my %hChanges = (
    "/Users/rennis/managebackups/include/globalsdef.h" => qr/ VERSION\s+\"$sVersionRegex\"/,
    "/Users/rennis/managebackups/src/managebackups.1.md" => qr/ managebackups $sVersionRegex/,
    "/Users/rennis/managebackups/src/package.deb/scripts/package" => qr/VERSION=$sVersionRegex/,
    "/Users/rennis/managebackups/src/package.deb/managebackups/DEBIAN/control" => qr/Version:\s+$sVersionRegex/
);


sub getCurrentVersion() {
    my $result = '';

    foreach my $sFile (keys %hChanges) {
        if (open(ORIG, $sFile)) {
            while (<ORIG>) {
                if (/$hChanges{$sFile}/) {
                    $result = $1;
                    last;
                }
            }

            close(ORIG);

            return $result if ($result);
        }
    }

    return "";
}



#-#-#  MAIN
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

my $sOrigVersion = getCurrentVersion();
my $sTargetVersion = $sOrigVersion;

if (!defined $ARGV[0] ) {
    print "[currently $sOrigVersion]\n\n";
    print "$0 [version]\n";
    print "\t or\n";
    print "\t + for a trivial increase (bump the letter at the end)\n";
    print "\t ++ for a minor increase (bump the last group of digits)\n";
    exit;
}

$sTargetVersion = $ARGV[0];

if ($ARGV[0] eq "+") {
    if ($sOrigVersion =~ /(.+)\.(\d+)(\w*)$/) {
        my $sLetter = $3;
        $sTargetVersion = "$1.$2" . ($sLetter ? (++$sLetter) : 'a');
    }
}
elsif ($ARGV[0] eq "++") {
    if ($sOrigVersion =~ /(.+)\.(\d+)(\w*)$/) {
        $sTargetVersion = "$1." . ($2+1);
    }
}


print "$sOrigVersion -> $sTargetVersion\n";

foreach my $sFile (keys %hChanges) {

    if (open(ORIG, $sFile)) {
        if (open(NEW, ">$sFile.new")) {

            while (<ORIG>) {
                if (/$hChanges{$sFile}/) {
                    s/$1/$sTargetVersion/;
                }

                print NEW $_;
            }

            close(NEW);
        }
        else {  
            die "cannot create $sFile.new\n"; 
        }

        close(ORIG);
        unlink($sFile);
        rename("$sFile.new", $sFile);

        if ($sFile =~ /package/) {
            chmod(0755, $sFile);
        }
    }
    else {  
        die "cannot read $sFile\n"; 
    }
}
